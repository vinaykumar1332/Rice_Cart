const productsContainer=document.getElementById("productsContainer"),checkoutBtn=document.getElementById("go-to-dashboard"),dashboardOverlay=document.getElementById("dashboard-overlay"),dashboardContent=document.getElementById("dashboard-content"),finalCheckoutBtn=document.getElementById("checkout-final"),modifyBtn=document.getElementById("modify-cart"),closeOverlayBtn=document.getElementById("close-overlay");let cart=[],products=[],filteredProducts=[],searchTerm="",selectedType="";function createSearchFilter(){const e=document.createElement("div");e.id="search-filter-container",e.innerHTML='\n    <input id="search-input" type="text" placeholder="Search by brand name..." />\n    <select id="type-filter">\n      <option value="">All Types</option>\n    </select>\n  ',productsContainer?.parentNode?.insertBefore(e,productsContainer);const t=document.createElement("div");t.id="count-container",t.innerHTML='<p id="filtered-count">0 results</p>',productsContainer?.parentNode?.insertBefore(t,productsContainer);const n=document.getElementById("search-input"),r=document.getElementById("type-filter");n?.addEventListener("input",(()=>{searchTerm=n.value.trim().toLowerCase(),filterProducts()})),r?.addEventListener("change",(()=>{selectedType=r.value,filterProducts()}))}function populateTypeFilter(){const e=document.getElementById("type-filter");[...new Set(products.map((e=>e.type)))].sort().forEach((t=>{const n=document.createElement("option");n.value=t,n.textContent=t,e?.appendChild(n)}))}function filterProducts(){filteredProducts=products.filter((e=>{const t=!searchTerm||(e.name?.toLowerCase().includes(searchTerm)||e.brand?.toLowerCase().includes(searchTerm)||e.type?.toLowerCase().includes(searchTerm)),n=!selectedType||e.type===selectedType;return t&&n})),productsContainer.innerHTML="",updateFilteredCount(),showSkeletons(filteredProducts.length),setTimeout((()=>{removeSkeletons(),displayAllProducts()}),800)}function showSkeletons(e){for(let t=0;t<e;t++){const e=document.createElement("div");e.className="skeleton-card",e.innerHTML='\n      <div class="skeleton-img"></div>\n      <div class="skeleton-info">\n        <div class="skeleton-name"></div>\n        <div class="skeleton-quantity"></div>\n        <div class="skeleton-actions"></div>\n      </div>\n    ',productsContainer?.appendChild(e)}}function removeSkeletons(){document.querySelectorAll(".skeleton-card").forEach((e=>e.remove()))}function getLocalImage(e){return`./src/assets/images/${e.id}.jpg`}function updateCartUI(e,t,n){const r=e.querySelector(".actions"),o=cart.find((e=>e.id===t.id&&e.weightPerBag===n));r.innerHTML=o?`\n      <button class="decrease" data-id="${t.id}" data-weight="${n}">-</button>\n      <span class="qty">${o.bags}</span>\n      <button class="increase" data-id="${t.id}" data-weight="${n}">+</button>\n    `:`<button class="add-to-cart" data-id="${t.id}" data-weight="${n}">Add to Cart</button>`}function createProductCard(e){const t=document.createElement("div");t.className="product-card fade-in-on-scroll",t.setAttribute("data-type",e.type||"N/A"),t.setAttribute("data-id",e.id);const n="Active"!==e.status;n&&t.classList.add("inactive");const r=e.quantities||[];let o="";if(!n&&r.length>0&&r.forEach((e=>{o+=`<option value="${e}">${e} kg</option>`})),t.innerHTML=`\n    <div class="product-card-image">\n      <img \n        src="${getLocalImage(e)}" \n        alt="${e.brand||"Product"}" \n        class="product-img" \n        loading="lazy"\n        onerror="this.src='./src/assets/images/default.jpg';"\n      >\n    </div>\n    <div class="product-info">\n      <h3 class="product-name">${e.brand||"Unknown"}</h3>\n      <p class="product-type">${e.name||"N/A"}</p>\n      <p class="product-bag-price">${n?"Out of Stock":"Check price"}</p>\n      ${!n&&o?`<div class="custom-select-container">\n             <div class="custom">\n              <select id="quantity-${e.id}" class="quantity-select">\n                <option value="">Select kgs</option>\n                ${o}\n              </select>\n             </div>\n           </div>\n           <p class="error-message" id="error-${e.id}" style="display: none; color: red;"></p>`:""}\n      <div class="actions">\n        ${!n&&o?`<button class="add-to-cart" data-id="${e.id}">Add to Cart</button>`:""}\n      </div>\n    </div>\n  `,!n&&o){const n=t.querySelector(".quantity-select"),r=t.querySelector(".product-bag-price"),o=t.querySelector(".error-message");n?.addEventListener("change",(()=>{const a=parseInt(n.value);if(o.style.display="none",a){const n=a*e.pricePerKg;r.textContent=`₹${n} per bag`,updateCartUI(t,e,a)}else r.textContent="Check price"}))}productsContainer?.appendChild(t)}function displayAllProducts(){productsContainer.innerHTML="",0!==filteredProducts.length?filteredProducts.forEach(createProductCard):productsContainer.innerHTML='<p class="Error"><i class="fa-regular fa-face-sad-tear"></i>No products found.</p>'}function updateFilteredCount(){document.getElementById("filtered-count").textContent=`${filteredProducts.length} result${1!==filteredProducts.length?"s":""}`}function updateDashboard(){if(0===cart.length)return void dashboardOverlay.classList.add("hidden");dashboardOverlay.classList.remove("hidden"),dashboardContent.innerHTML='\n    <table class="cart-table">\n      <thead>\n        <tr>\n          <th>Brand</th>\n          <th>Weight/Bag</th>\n          <th>Bags</th>\n          <th>₹/kg</th>\n          <th>Subtotal</th>\n        </tr>\n      </thead>\n      <tbody></tbody>\n      <tfoot>\n        <tr>\n          <td colspan="4"><strong>Total</strong></td>\n          <td id="total-price"><strong>₹0</strong></td>\n        </tr>\n      </tfoot>\n    </table>\n  ';const e=dashboardContent.querySelector("tbody");let t=0;cart.forEach((n=>{const r=n.basePrice*n.weightPerBag*n.bags;t+=r;const o=document.createElement("tr");o.innerHTML=`\n      <td>${n.brand}</td>\n      <td>${n.weightPerBag} kg</td>\n      <td>${n.bags}</td>\n      <td>₹${n.basePrice}</td>\n      <td>₹${r}</td>\n    `,e.appendChild(o)})),dashboardContent.querySelector("#total-price").innerHTML=`<strong>₹${t}</strong>`}function toggleCheckout(){checkoutBtn.style.display=cart.length>0?"block":"none",checkoutBtn.textContent=`Checkout (${cart.length})`}function toggleActionVisible(){document.querySelectorAll(".actions").forEach((e=>{const t=null!==e.querySelector(".decrease"),n=null!==e.querySelector(".increase");e.classList.toggle("action-visible",t&&n)}));const e=document.getElementById("dashboard-overlay"),t=document.querySelector(".action-visible");e&&e.classList.toggle("active",!!t)}function initScrollFadeIn(){const e=document.querySelectorAll(".fade-in-on-scroll"),t=new IntersectionObserver(((e,t)=>{e.forEach((e=>{e.isIntersecting&&(e.target.classList.add("visible"),t.unobserve(e.target))}))}),{threshold:.1,rootMargin:"0px 0px -10% 0px"});e.forEach((e=>t.observe(e)))}productsContainer?.addEventListener("click",(e=>{const t=e.target,n=t.dataset?.id;if(!n)return;const r=products.find((e=>e.id===n));if(!r)return;const o=t.closest(".product-card"),a=o.querySelector(".quantity-select"),s=o.querySelector(".error-message"),c=parseInt(a?.value);if(t.classList.contains("add-to-cart")){if(!c)return s.textContent="Select a weight.",void(s.style.display="block");s.style.display="none";const e=cart.find((e=>e.id===n&&e.weightPerBag===c));e?e.bags++:cart.push({id:n,brand:r.brand,weightPerBag:c,bags:1,basePrice:r.pricePerKg}),updateCartUI(o,r,c),toggleCheckout(),updateDashboard(),sessionStorage?.setItem("cart",JSON.stringify(cart))}if(t.classList.contains("increase")){const e=parseInt(t.dataset.weight),a=cart.find((t=>t.id===n&&t.weightPerBag===e));a&&(a.bags++,updateCartUI(o,r,e),toggleCheckout(),updateDashboard(),sessionStorage?.setItem("cart",JSON.stringify(cart)))}if(t.classList.contains("decrease")){const e=parseInt(t.dataset.weight),a=cart.find((t=>t.id===n&&t.weightPerBag===e));a&&(a.bags--,a.bags<=0&&(cart=cart.filter((t=>t.id!==n||t.weightPerBag!==e))),updateCartUI(o,r,e),toggleCheckout(),updateDashboard(),sessionStorage?.setItem("cart",JSON.stringify(cart)))}})),checkoutBtn.addEventListener("click",(()=>{0!==cart.length&&(updateDashboard(),checkoutBtn.style.display="none",dashboardOverlay?.classList.remove("hidden"))})),modifyBtn.addEventListener("click",(()=>{dashboardOverlay.classList.add("hidden"),toggleCheckout()})),closeOverlayBtn.addEventListener("click",(()=>{dashboardOverlay.classList.add("hidden"),toggleCheckout()})),finalCheckoutBtn.addEventListener("click",(()=>{sessionStorage.setItem("cart",JSON.stringify(cart)),window.location.href="orders.html"})),createSearchFilter(),showSkeletons(20),fetch("https://script.google.com/macros/s/AKfycbzWIlg4U6L71j2jIOxt0Jh6EKvUSDbvrKf7F4AtsbLzY5_YZXjCj_nJ-0wMOjkpHY-G/exec").then((e=>e.json())).then((e=>{products=e.map((e=>({id:e.ID,brand:e.Brand,name:e.Name,type:e.Type,quantities:String(e.Quantity||"").split(",").map((e=>parseInt(e.trim()))).filter((e=>!isNaN(e)&&e>0)),pricePerKg:parseFloat(e.PricePerKg),status:e.Status?.trim?.()||"Inactive"}))),filteredProducts=[...products],populateTypeFilter(),removeSkeletons(),displayAllProducts(),updateFilteredCount(),toggleCheckout()})).catch((e=>{console.error("Error loading products:",e),removeSkeletons(),productsContainer.innerHTML='<p class="Error">Error loading products. Please try again later.</p>',updateFilteredCount()})),document.addEventListener("DOMContentLoaded",(()=>{toggleActionVisible(),initScrollFadeIn()}));const observer=new MutationObserver((()=>{toggleActionVisible(),initScrollFadeIn()}));observer.observe(document.body,{childList:!0,subtree:!0}),window.addEventListener("beforeunload",(()=>observer.disconnect()));